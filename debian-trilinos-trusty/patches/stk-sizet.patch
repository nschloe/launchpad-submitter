diff --git a/packages/stk/stk_util/stk_util/parallel/MPI.hpp b/packages/stk/stk_util/stk_util/parallel/MPI.hpp
index 56243a0..c0a4273 100644
--- a/packages/stk/stk_util/stk_util/parallel/MPI.hpp
+++ b/packages/stk/stk_util/stk_util/parallel/MPI.hpp
@@ -1,23 +1,23 @@
 // Copyright (c) 2013, Sandia Corporation.
 // Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
 // the U.S. Government retains certain rights in this software.
-// 
+//
 // Redistribution and use in source and binary forms, with or without
 // modification, are permitted provided that the following conditions are
 // met:
-// 
+//
 //     * Redistributions of source code must retain the above copyright
 //       notice, this list of conditions and the following disclaimer.
-// 
+//
 //     * Redistributions in binary form must reproduce the above
 //       copyright notice, this list of conditions and the following
 //       disclaimer in the documentation and/or other materials provided
 //       with the distribution.
-// 
+//
 //     * Neither the name of Sandia Corporation nor the names of its
 //       contributors may be used to endorse or promote products derived
 //       from this software without specific prior written permission.
-// 
+//
 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -29,12 +29,11 @@
 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-// 
+//
 
 #ifndef STK_UTIL_PARALLEL_MPI_hpp
 #define STK_UTIL_PARALLEL_MPI_hpp
 
-#include <boost/static_assert.hpp>
 #include <stk_util/stk_config.h>
 #if defined ( STK_HAS_MPI )
 
@@ -436,8 +435,19 @@ template <>
 struct Datatype<Loc<size_t, int> >
 {
   static MPI_Datatype type() {
-    BOOST_STATIC_ASSERT(sizeof(double) == sizeof(size_t));
+#if __SIZEOF_INT__==__SIZEOF_SIZE_T__
+    return MPI_2INT;
+#elif __SIZEOF_LONG__==__SIZEOF_SIZE_T__
+    return MPI_LONG_INT;
+#elif __SIZEOF_LONG_LONG__==__SIZEOF_SIZE_T__
+    return MPI_LONG_LONG_INT;
+#elif __SIZEOF_DOUBLE__==__SIZEOF_SIZE_T__
     return MPI_DOUBLE_INT;
+#elif __SIZEOF_FLOAT__==__SIZEOF_SIZE_T__
+    return MPI_FLOAT_INT;
+#else
+#error No type matching __SIZEOF_SIZE_T__
+#endif
   }
 };
 
diff --git a/packages/stk/stk_util/stk_util/parallel/ParallelComm.cpp b/packages/stk/stk_util/stk_util/parallel/ParallelComm.cpp
index 18e696c..96d61e2 100644
--- a/packages/stk/stk_util/stk_util/parallel/ParallelComm.cpp
+++ b/packages/stk/stk_util/stk_util/parallel/ParallelComm.cpp
@@ -1,23 +1,23 @@
 // Copyright (c) 2013, Sandia Corporation.
 // Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
 // the U.S. Government retains certain rights in this software.
-// 
+//
 // Redistribution and use in source and binary forms, with or without
 // modification, are permitted provided that the following conditions are
 // met:
-// 
+//
 //     * Redistributions of source code must retain the above copyright
 //       notice, this list of conditions and the following disclaimer.
-// 
+//
 //     * Redistributions in binary form must reproduce the above
 //       copyright notice, this list of conditions and the following
 //       disclaimer in the documentation and/or other materials provided
 //       with the distribution.
-// 
+//
 //     * Neither the name of Sandia Corporation nor the names of its
 //       contributors may be used to endorse or promote products derived
 //       from this software without specific prior written permission.
-// 
+//
 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
@@ -29,7 +29,7 @@
 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-// 
+//
 
 #include <stdlib.h>
 #include <stdexcept>
@@ -37,7 +37,6 @@
 #include <iostream>
 #include <vector>
 
-#include <boost/static_assert.hpp> 
 #include <stk_util/parallel/ParallelComm.hpp>
 #include <stk_util/parallel/ParallelReduce.hpp>
 
@@ -1050,8 +1049,15 @@ bool comm_sizes( ParallelMachine comm ,
     send_buf[p_size+1] = local_flag ;
 
     BABBLE_STK_PARALLEL_COMM(comm, "                      calling MPI_Allreduce from comm_sizes");
-    BOOST_STATIC_ASSERT(sizeof(long long) == sizeof(size_t));
+#if __SIZEOF_INT__==__SIZEOF_SIZE_T__
+    result = MPI_Allreduce(p_send,p_recv,p_size,MPI_INT,MPI_SUM,comm);
+#elif __SIZEOF_LONG__==__SIZEOF_SIZE_T__
+    result = MPI_Allreduce(p_send,p_recv,p_size,MPI_LONG,MPI_SUM,comm);
+#elif __SIZEOF_LONG_LONG__==__SIZEOF_SIZE_T__
     result = MPI_Allreduce(p_send,p_recv,p_size,MPI_LONG_LONG,MPI_SUM,comm);
+#else
+#error No type matching __SIZEOF_SIZE_T__
+#endif
 
     if ( result != MPI_SUCCESS ) {
       // PARALLEL ERROR
