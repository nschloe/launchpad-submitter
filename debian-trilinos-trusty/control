Source: trilinos
Homepage: http://trilinos.org
Section: science
Priority: extra
Maintainer: Debian Science Maintainers <debian-science-maintainers@lists.alioth.debian.org>
Uploaders: Nico Schl√∂mer <nico.schloemer@gmail.com>
# Trilinos can use Ubuntu's serial netCDF as well.
Build-Depends: debhelper (>= 9),
 binutils-dev,
 libiberty-dev,
 cmake,
 gfortran,
 libopenmpi-dev,
 libblas-dev,
 libboost-dev,
 libboost-system-dev,
 libeigen3-dev,
 libhdf5-openmpi-dev (>= 1.8.7),
 liblapack-dev,
 libmatio-dev (>= 1.5.0),
 libmumps-dev (>= 4.7.3),
 libnetcdfc-dev (>= 4.2.0),
 libptscotch-dev,
 libtbb-dev,
 zlib1g-dev
Standards-Version: 3.9.5
Vcs-Git: git://git.debian.org/debian-science/trilinos.git
Vcs-Browser: http://git.debian.org/?p=debian-science/trilinos.git;a=summary

Package: trilinos-dev
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}, ${mydevpackages}
Suggests: libtrilinos-doc
Description: object-oriented framework for large-scale problems
 The Trilinos Project is an effort to develop algorithms and enabling
 technologies within an object-oriented software framework for the
 solution of large-scale, complex multi-physics engineering and
 scientific problems. A unique design feature of Trilinos is its
 focus on packages.
 .
 This package contains the development header and some makefile templates.

Package: libamesos
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: direct sparse solver package
 Amesos is the Direct Sparse Solver Package in Trilinos. The goal of Amesos is
 to make AX=B as easy as it sounds, at least for direct methods. Amesos
 provides clean and consistent interfaces to a number of third-party libraries.
 .
 This package contains the dynamic libraries.

Package: libamesos-dev
Architecture: any
Section: libdevel
Depends: libamesos (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: direct sparse solver package
 Amesos is the Direct Sparse Solver Package in Trilinos. The goal of Amesos is
 to make AX=B as easy as it sounds, at least for direct methods. Amesos
 provides clean and consistent interfaces to a number of third-party libraries.
 .
 This package provides headers.

Package: libanasazi
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: large-scale eigenvalue algorithms
 Anasazi is an extensible and interoperable framework for large-scale
 eigenvalue algorithms. The motivation for this framework is to provide a
 generic interface to a collection of algorithms for solving large-scale
 eigenvalue problems. Anasazi is interoperable because both the matrix and
 vectors (defining the eigenspace) are considered to be opaque objects -- only
 knowledge of the matrix and vectors via elementary operations is necessary.
 .
 This package contains the dynamic libraries.

Package: libanasazi-dev
Architecture: any
Section: libdevel
Depends: libanasazi (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: large-scale eigenvalue algorithms
 Anasazi is an extensible and interoperable framework for large-scale
 eigenvalue algorithms. The motivation for this framework is to provide a
 generic interface to a collection of algorithms for solving large-scale
 eigenvalue problems. Anasazi is interoperable because both the matrix and
 vectors (defining the eigenspace) are considered to be opaque objects -- only
 knowledge of the matrix and vectors via elementary operations is necessary.
 .
 This package provides headers.

Package: libaztecoo
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: object-oriented interface to the Aztec solver
 AztecOO provides an object-oriented interface to the well-known Aztec solver
 library. Furthermore, it allows flexible construction of matrix and vector
 arguments via Epetra matrix and vector classes. Finally, AztecOO provide
 additional functionality not found in Aztec and any future enhancements to the
 Aztec package will be available only through the AztecOO interfaces.
 .
 This package contains the dynamic libraries.

Package: libaztecoo-dev
Architecture: any
Section: libdevel
Depends: libaztecoo (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: object-oriented interface to the Aztec solver
 AztecOO provides an object-oriented interface to the well-known Aztec solver
 library. Furthermore, it allows flexible construction of matrix and vector
 arguments via Epetra matrix and vector classes. Finally, AztecOO provide
 additional functionality not found in Aztec and any future enhancements to the
 Aztec package will be available only through the AztecOO interfaces.
 .
 This package provides headers.

Package: libbelos
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: iterative linear solvers
 Belos provides next-generation iterative linear solvers and a powerful linear
 solver developer framework. This framework includes abstract interfaces to
 linear algebra using traits mechanisms, abstract interfaces to
 orthogonalization, abstract interfaces to iteration kernels, powerful solver
 managers, and a basic linear problem class.
 .
 This package contains the dynamic libraries.

Package: libbelos-dev
Architecture: any
Section: libdevel
Depends: libbelos (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: iterative linear solvers
 Belos provides next-generation iterative linear solvers and a powerful linear
 solver developer framework. This framework includes abstract interfaces to
 linear algebra using traits mechanisms, abstract interfaces to
 orthogonalization, abstract interfaces to iteration kernels, powerful solver
 managers, and a basic linear problem class.
 .
 This package provides headers.

Package: libepetra
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: basis package for linear algebra
 Epetra provides the fundamental construction routines and services function
 that are required for serial and parallel linear algebra libraries. Epetra
 provides the underlying foundation for all Trilinos solvers.
 .
 This package contains the dynamic libraries.

Package: libepetra-dev
Architecture: any
Section: libdevel
Depends: libepetra (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: basis package for linear algebra
 Epetra provides the fundamental construction routines and services function
 that are required for serial and parallel linear algebra libraries. Epetra
 provides the underlying foundation for all Trilinos solvers.
 .
 This package provides headers.

Package: libepetraext
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: extensions to the Epetra toolkit
 EpetraExt provides tools and functions that make it easier to work with
 Epetra.
 .
 This package contains the dynamic libraries.

Package: libepetraext-dev
Architecture: any
Section: libdevel
Depends: libepetraext (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: extensions to the Epetra toolkit
 EpetraExt provides tools and functions that make it easier to work with
 Epetra.
 .
 This package provides headers.

Package: libfei
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: finite element interface for lineawr solvers
 The Finite Element Interface to Linear Solvers (FEI) is a general interface
 for assembling finite-element data into a linear system of equations. It is an
 abstraction layer that insulates finite-element application codes from
 linear-algebra issues such as sparse matrix storage formats and mappings from
 nodes and solution fields to distributed equation spaces. It puts a common
 face on various linear solvers, allowing finite-element applications to switch
 from one solver library to another with minimal changes to application code.
 .
 This package contains the dynamic libraries.

Package: libfei-dev
Architecture: any
Section: libdevel
Depends: libfei (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: finite element interface for lineawr solvers
 The Finite Element Interface to Linear Solvers (FEI) is a general interface
 for assembling finite-element data into a linear system of equations. It is an
 abstraction layer that insulates finite-element application codes from
 linear-algebra issues such as sparse matrix storage formats and mappings from
 nodes and solution fields to distributed equation spaces. It puts a common
 face on various linear solvers, allowing finite-element applications to switch
 from one solver library to another with minimal changes to application code.
 .
 This package provides headers.

Package: libgaleri
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: generation of distributed linear systems
 The Trilinos package Galeri contains a suite of utilities and classes to
 generate a variety of (distributed) linear systems. Galeri's functionalities
 are very close to that of the MATLAB's gallery() function.
 Several well-known finite element and finite difference matrices can be
 generated using only a few simple code lines.
 .
 This package contains the dynamic libraries.

Package: libgaleri-dev
Architecture: any
Section: libdevel
Depends: libgaleri (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: generation of distributed linear systems
 The Trilinos package Galeri contains a suite of utilities and classes to
 generate a variety of (distributed) linear systems. Galeri's functionalities
 are very close to that of the MATLAB's gallery() function.
 Several well-known finite element and finite difference matrices can be
 generated using only a few simple code lines.
 .
 This package provides headers.

Package: libintrepid
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: compatible discretizations of PDEs
 Intrepid is a library of interoperable tools for compatible discretizations of
 Partial Differential Equations (PDEs).  Intrepid is intended primarily for
 application developers who want to reuse large parts of their existing code
 frameworks such as I/O, data structures, assembly routines, etc. while gaining
 access to advanced discretization capabilities provided by Intrepid.
 .
 This package contains the dynamic libraries.

Package: libintrepid-dev
Architecture: any
Section: libdevel
Depends: libintrepid (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: compatible discretizations of PDEs
 Intrepid is a library of interoperable tools for compatible discretizations of
 Partial Differential Equations (PDEs).  Intrepid is intended primarily for
 application developers who want to reuse large parts of their existing code
 frameworks such as I/O, data structures, assembly routines, etc. while gaining
 access to advanced discretization capabilities provided by Intrepid.
 .
 This package provides headers.

Package: libifpack
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: algebraic preconditioners
 IFPACK provides a suite of object-oriented algebraic preconditioners for the
 solution of preconditioned iterative solvers. IFPACK constructors expect an
 Epetra_RowMatrix object for construction. IFPACK is part of the Trilinos
 Solver Project and IFPACK object interact well with other Trilinos classes. In
 particular, IFPACK can be used as a preconditioner for AztecOO.
 .
 This package contains the dynamic libraries.

Package: libifpack-dev
Architecture: any
Section: libdevel
Depends: libifpack (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: algebraic preconditioners
 IFPACK provides a suite of object-oriented algebraic preconditioners for the
 solution of preconditioned iterative solvers. IFPACK constructors expect an
 Epetra_RowMatrix object for construction. IFPACK is part of the Trilinos
 Solver Project and IFPACK object interact well with other Trilinos classes. In
 particular, IFPACK can be used as a preconditioner for AztecOO.
 .
 This package provides headers.

Package: libisorropia
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: partioning, load balancing, coloring of sparse matrices
 Isorropia is a package for combinatorial scientific computing, with focus on
 partitioning and load balancing, but also supports coloring and ordering of
 sparse matrices. Its main purpose is to assist with redistributing objects
 such as matrices and graphs in a parallel execution setting, to allow for more
 efficient computations. Isorropia partitions matrices by rows, and produces
 good maps for Epetra matrices (graphs).
 .
 This package contains the dynamic libraries.

Package: libisorropia-dev
Architecture: any
Section: libdevel
Depends: libisorropia (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: partioning, load balancing, coloring of sparse matrices
 Isorropia is a package for combinatorial scientific computing, with focus on
 partitioning and load balancing, but also supports coloring and ordering of
 sparse matrices. Its main purpose is to assist with redistributing objects
 such as matrices and graphs in a parallel execution setting, to allow for more
 efficient computations. Isorropia partitions matrices by rows, and produces
 good maps for Epetra matrices (graphs).
 .
 This package provides headers.

Package: libkokkos
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Trilinos core kernels
 Kokkos is a Trilinos core kernels package. 
 .
 This package contains the dynamic libraries.

Package: libkokkos-dev
Architecture: any
Section: libdevel
Depends: libkokkos (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: Trilinos core kernels
 Kokkos is a Trilinos core kernels package. 
 .
 This package provides headers.

Package: libml
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: multigrid preconditioning
 ML is Sandia's main multigrid preconditioning package. ML is designed to solve
 large sparse linear systems of equations arising primarily from elliptic PDE
 discretizations. ML is used to define and build multigrid solvers and
 preconditioners, and it contains black-box classes to construct
 highly-scalable smoothed aggregation preconditioners. ML preconditioners have
 been used on thousands of processors for a variety of problems, including the
 incompressible Navier-Stokes equations with heat and mass transfer, linear and
 nonlinear elasticity equations, the Maxwell equations, semiconductor
 equations, and more.
 .
 This package contains the dynamic libraries.

Package: libml-dev
Architecture: any
Section: libdevel
Depends: libml (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: multigrid preconditioning
 ML is Sandia's main multigrid preconditioning package. ML is designed to solve
 large sparse linear systems of equations arising primarily from elliptic PDE
 discretizations. ML is used to define and build multigrid solvers and
 preconditioners, and it contains black-box classes to construct
 highly-scalable smoothed aggregation preconditioners. ML preconditioners have
 been used on thousands of processors for a variety of problems, including the
 incompressible Navier-Stokes equations with heat and mass transfer, linear and
 nonlinear elasticity equations, the Maxwell equations, semiconductor
 equations, and more.
 .
 This package provides headers.

Package: libnox
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: robust solution of nonlinear equations
 NOX robustly solves and analyzes large-scale systems of nonlinear equations.
 NOX is short for Nonlinear Object-Oriented Solutions, and its objective is to
 enable the robust and efficient solution of the equation: F(x)=0 using
 globalized Newton methods such as line search and trust region methods. NOX is
 designed to work with any linear algebra package and to be easily customized.
 .
 This package contains the dynamic libraries.

Package: libnox-dev
Architecture: any
Section: libdevel
Depends: libnox (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: robust solution of nonlinear equations
 NOX robustly solves and analyzes large-scale systems of nonlinear equations.
 NOX is short for Nonlinear Object-Oriented Solutions, and its objective is to
 enable the robust and efficient solution of the equation: F(x)=0 using
 globalized Newton methods such as line search and trust region methods. NOX is
 designed to work with any linear algebra package and to be easily customized.
 .
 This package provides headers.

Package: libpamgen
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: hexahedral and quadrilateral mesh generator
 PAMGEN creates hexahedral or quadrilateral (in 2D) finite element meshes of
 simple shapes (cubes and cylinders) in parallel. When linked to an application
 as a library, it allows each process of a parallel simulation to generate its
 finite element domain representation at execution time.
 .
 This package contains the dynamic libraries.

Package: libpamgen-dev
Architecture: any
Section: libdevel
Depends: libpamgen (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: hexahedral and quadrilateral mesh generator
 PAMGEN creates hexahedral or quadrilateral (in 2D) finite element meshes of
 simple shapes (cubes and cylinders) in parallel. When linked to an application
 as a library, it allows each process of a parallel simulation to generate its
 finite element domain representation at execution time.
 .
 This package provides headers.

Package: librtop
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: reductions/transformation operators
 RTOp (reduction/transformation operators) provides the basic mechanism for
 implementing vector operations in a flexible and efficient manner.
 .
 This package contains the dynamic libraries.

Package: librtop-dev
Architecture: any
Section: libdevel
Depends: librtop (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: reductions/transformation operators
 RTOp (reduction/transformation operators) provides the basic mechanism for
 implementing vector operations in a flexible and efficient manner.
 .
 This package provides headers.

Package: libsacado
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: automatic differentiation for C++ applications
 Sacado is a set of automatic differentiation tools for C++ applications. It
 provides templated classes for forward, reverse and Taylor mode automatic
 differentiation.
 .
 This package contains the dynamic libraries.

Package: libsacado-dev
Architecture: any
Section: libdevel
Depends: libsacado (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: automatic differentiation for C++ applications
 Sacado is a set of automatic differentiation tools for C++ applications. It
 provides templated classes for forward, reverse and Taylor mode automatic
 differentiation.
 .
 This package provides headers.

Package: libseacas
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: finite element analysis
 The Sandia Engineering Analysis Code Access System (SEACAS) is a suite of
 preprocessing, postprocessing, translation, and utility applications
 supporting finite element analysis software using the ExodusII database file
 format.
 .
 This package contains the dynamic libraries.

Package: libseacas-dev
Architecture: any
Section: libdevel
Depends: libseacas (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: finite element analysis
 The Sandia Engineering Analysis Code Access System (SEACAS) is a suite of
 preprocessing, postprocessing, translation, and utility applications
 supporting finite element analysis software using the ExodusII database file
 format.
 .
 This package provides headers.

Package: libshards
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: interoperability tools for PDE solving
 The purpose of Shards is to provide a suite of common tools for numerical and
 topological data that facilitate interoperability between typical software
 modules used to solve Partial Differential Equations (PDEs) by finite element,
 finite volume and finite difference methods. Shards comprises of two
 categories of tools: methods to manage and access information about cell
 topologies used in mesh-based methods for PDEs, and methods to work with
 multi-dimensional arrays used to store numerical data in corresponding
 computer codes.
 .
 This package contains the dynamic libraries.

Package: libshards-dev
Architecture: any
Section: libdevel
Depends: libshards (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: interoperability tools for PDE solving
 The purpose of Shards is to provide a suite of common tools for numerical and
 topological data that facilitate interoperability between typical software
 modules used to solve Partial Differential Equations (PDEs) by finite element,
 finite volume and finite difference methods. Shards comprises of two
 categories of tools: methods to manage and access information about cell
 topologies used in mesh-based methods for PDEs, and methods to work with
 multi-dimensional arrays used to store numerical data in corresponding
 computer codes.
 .
 This package provides headers.

Package: libstk
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: mesh and topology handling
 The Sierra Toolkit Mesh product provides a unstructured mesh in-memory,
 parallel-distributed database. Mesh capabilities include a mesh topology data
 structure, mesh subsetting, coefficient data, mesh field data, support for
 changing the mesh topology, and support for parallel operations on the mesh.
 .
 This package contains the dynamic libraries.

Package: libstk-dev
Architecture: any
Section: libdevel
Depends: libstk (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: mesh and topology handling
 The Sierra Toolkit Mesh product provides a unstructured mesh in-memory,
 parallel-distributed database. Mesh capabilities include a mesh topology data
 structure, mesh subsetting, coefficient data, mesh field data, support for
 changing the mesh topology, and support for parallel operations on the mesh.
 .
 This package provides headers.

Package: libstratimikos
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: wrappers for linear solvers and preconditioners
 The package Stratimikos contains a unified set of Thyra-based wrappers to
 linear solver and preconditioner capabilities in Trilinos.  The Stratimikos
 package is also a place where unified testing of linear solvers and
 preconditioners can be performed.
 .
 This package contains the dynamic libraries.

Package: libstratimikos-dev
Architecture: any
Section: libdevel
Depends: libstratimikos (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: wrappers for linear solvers and preconditioners
 The package Stratimikos contains a unified set of Thyra-based wrappers to
 linear solver and preconditioner capabilities in Trilinos.  The Stratimikos
 package is also a place where unified testing of linear solvers and
 preconditioners can be performed.
 .
 This package provides headers.

Package: libteko
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: block preconditioners
 Teko is a package for development and implementation of block preconditioners.
 This includes support for manipulation and setup of block operators.
 Furthermore tools exist to support decomposition of a fully coupled operator.
 Additionally, facilities that allow the construction of approximate inverse
 operators using the full complement of available preconditioners and solvers
 are available in Teko. Finally, a small number of generic block
 preconditioners has been implemented in Teko, including block Jacobi, and
 block Gauss-Seidel. For the Navier-Stokes equation, Teko has implementations
 of SIMPLE, PCD and LSC. For details on these methods see Stabilization and
 Scalable Block Preconditioning for the Navier-Stokes Equations and the
 references therein.
 .
 This package contains the dynamic libraries.

Package: libteko-dev
Architecture: any
Section: libdevel
Depends: libteko (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: block preconditioners
 Teko is a package for development and implementation of block preconditioners.
 This includes support for manipulation and setup of block operators.
 Furthermore tools exist to support decomposition of a fully coupled operator.
 Additionally, facilities that allow the construction of approximate inverse
 operators using the full complement of available preconditioners and solvers
 are available in Teko. Finally, a small number of generic block
 preconditioners has been implemented in Teko, including block Jacobi, and
 block Gauss-Seidel. For the Navier-Stokes equation, Teko has implementations
 of SIMPLE, PCD and LSC. For details on these methods see Stabilization and
 Scalable Block Preconditioning for the Navier-Stokes Equations and the
 references therein.
 .
 This package provides headers.

Package: libteuchos
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: common tools for Trilinos
 Teuchos provides a suite of common tools for Trilinos for developers to use.
 These tools include BLAS/LAPACK wrappers, smart pointers, parameter lists, XML
 parsers, etc.
 .
 This package contains the dynamic libraries.

Package: libteuchos-dev
Architecture: any
Section: libdevel
Depends: libteuchos (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: common tools for Trilinos
 Teuchos provides a suite of common tools for Trilinos for developers to use.
 These tools include BLAS/LAPACK wrappers, smart pointers, parameter lists, XML
 parsers, etc.
 .
 This package provides headers.

Package: libthyra
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: interoperability layer for numerical software
 The Thyra package contains a set of interfaces and supporting code that
 defines basic interoperability mechanisms between different types of numerical
 software. The foundation of all of these interfaces are the mathematical
 concepts of vectors, vector spaces, and linear operators. All other interfaces
 and support software is built on the basic operator/vector interfaces.
 .
 This package contains the dynamic libraries.

Package: libthyra-dev
Architecture: any
Section: libdevel
Depends: libthyra (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: interoperability layer for numerical software
 The Thyra package contains a set of interfaces and supporting code that
 defines basic interoperability mechanisms between different types of numerical
 software. The foundation of all of these interfaces are the mathematical
 concepts of vectors, vector spaces, and linear operators. All other interfaces
 and support software is built on the basic operator/vector interfaces.
 .
 This package provides headers.

Package: libtpi
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: tpi
 .
 This package contains the dynamic libraries.

Package: libtpi-dev
Architecture: any
Section: libdevel
Depends: libtpi (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: tpi
 .
 This package provides headers.

Package: libtpetra
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: templated numerical linear algebra package
 Next-generation, templated version of Petra, taking advantage of the newer
 advanced features of C++.
 .
 This package contains the dynamic libraries.

Package: libtpetra-dev
Architecture: any
Section: libdevel
Depends: libtpetra (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: templated numerical linear algebra package
 Next-generation, templated version of Petra, taking advantage of the newer
 advanced features of C++.
 .
 This package provides headers.

Package: libtrilinoscouplings
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: combining Trilinos packages
 TrilinosCouplings provides a location for multiple Trilinos packages to be
 combined for testing integrated package capabilities.
 .
 This package contains the dynamic libraries.

Package: libtrilinoscouplings-dev
Architecture: any
Section: libdevel
Depends: libtrilinoscouplings (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: combining Trilinos packages
 TrilinosCouplings provides a location for multiple Trilinos packages to be
 combined for testing integrated package capabilities.
 .
 This package provides headers.

Package: libtriutils
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: utilities for Trilinos
 TriUtils a package of utilities for other Trilinos packages.
 .
 This package contains the dynamic libraries.

Package: libtriutils-dev
Architecture: any
Section: libdevel
Depends: libtriutils (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: utilities for Trilinos
 TriUtils a package of utilities for other Trilinos packages.
 .
 This package provides headers.

Package: libxpetra
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: conversion between Epetra and Teuchos objects
 Xpetra is an interoperability layer for Epetra/Tpetra.
 .
 This package contains the dynamic libraries.

Package: libxpetra-dev
Architecture: any
Section: libdevel
Depends: libxpetra (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: conversion between Epetra and Teuchos objects
 Xpetra is an interoperability layer for Epetra/Tpetra.
 .
 This package provides headers.

Package: libzoltan
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: parallel dynamic load balancing
 Zoltan is a toolkit of parallel services for dynamic, unstructured, and/or
 adaptive simulations. Zoltan provides parallel dynamic load balancing and
 related services for a wide variety of applications, including finite element
 methods, matrix operations, particle methods, and crash simulations. Zoltan
 also provides parallel graph coloring, matrix ordering, unstructured
 communication tools, and distributed data directories.
 .
 This package contains the dynamic libraries.

Package: libzoltan-dev
Architecture: any
Section: libdevel
Depends: libzoltan (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: parallel dynamic load balancing
 Zoltan is a toolkit of parallel services for dynamic, unstructured, and/or
 adaptive simulations. Zoltan provides parallel dynamic load balancing and
 related services for a wide variety of applications, including finite element
 methods, matrix operations, particle methods, and crash simulations. Zoltan
 also provides parallel graph coloring, matrix ordering, unstructured
 communication tools, and distributed data directories.
 .
 This package provides headers.

Package: trilinos-dbg
Architecture: any
Section: debug
Depends: ${shlibs:Depends}, ${misc:Depends}, libtrilinos (= ${binary:Version})
Suggests: libtrilinos-doc
Description: object-oriented framework for large-scale problems
 The Trilinos Project is an effort to develop algorithms and enabling
 technologies within an object-oriented software framework for the
 solution of large-scale, complex multi-physics engineering and
 scientific problems. A unique design feature of Trilinos is its
 focus on packages.
 .
 These libraries are built with debug symbols. They are useful to debug
 programs which use Trilinos. These must be used also at build/link time.

Package: trilinos-doc
Homepage: http://trilinos.sandia.gov/documentation.html
Architecture: all
Section: doc
Depends: ${misc:Depends}
Description: object-oriented framework for large-scale problems
 The Trilinos Project is an effort to develop algorithms and enabling
 technologies within an object-oriented software framework for the
 solution of large-scale, complex multi-physics engineering and
 scientific problems. A unique design feature of Trilinos is its
 focus on packages.
 .
 This is documentation for the Trilinos libraries in HTML format.
 Some pages point to header files provided in the corresponding -dev package,
 so it is suggested to install the latter as well.

Package: trilinos
Architecture: any
Section: math
Depends: ${shlibs:Depends}, ${misc:Depends}
Suggests: libtrilinos-doc
Description: object-oriented framework for large-scale problems
 The Trilinos Project is an effort to develop algorithms and enabling
 technologies within an object-oriented software framework for the
 solution of large-scale, complex multi-physics engineering and
 scientific problems. A unique design feature of Trilinos is its
 focus on packages.
 .
 This package contains the executable binaries.
